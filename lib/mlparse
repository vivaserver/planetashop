#!/usr/bin/env ruby

path, file = File.split(File.expand_path(__FILE__))

require "#{path}/leecher"
require "#{path}/outrails"
require "#{path}/mlparser"

class Parse
  require 'rexml/document'
  include OutRails

  def initialize(path)
    load_models(path)
    l = Leecher.new
    #
    Country.find(:all).each do |c|
      items_pre = c.items.size
      # first request just gets a gerenic xml for getting the total of items for pagination
      file  = l.retrieve_url("#{c.url_base}jm/searchXml?as_categ_id=#{MLParser::ML_CATEG}")
      total = (REXML::Document.new(file.body)).root.elements['listing'].attributes['items_total']
      if total.to_i == 0
        # no linux-specific category. try global word search
        req   = "as_word=#{MLParser::ML_SEARCH_WORD}"
        file  = l.retrieve_url("#{c.url_base}jm/searchXml?#{req}")
        total = (REXML::Document.new(file.body)).root.elements['listing'].attributes['items_total']
        puts "#{c.title}: #{total} items by search"
      else
        req = "as_categ_id=#{MLParser::ML_CATEG}"
        puts "#{c.title}: #{total} items by category"
      end
      req += "&as_order_id=&as_qshow=#{total}&user=#{MLParser::ML_USER}&pwd=#{MLParser::ML_PASS}"
      #
      file = l.retrieve_url("#{c.url_base}jm/searchXml?#{req}")
      if file
        REXML::Document.parse_stream(file.body,MLParser.new(c.id))
        if c.items.size > 0
          # new items added since last xML parsing, delete older
          c.items.sort_by { |item| item.created_at }[0..items_pre].each { |item| item.destroy }
          # now delete cache
          if File.directory?("#{path[0..-4]}/public/cache/#{c.name}")
            Dir.chdir("#{path[0..-4]}/public/cache/#{c.name}") { |d|
              Dir.glob('*.html') { |f| File.delete(f) }
            }
            Dir.delete("#{path[0..-4]}/public/cache/#{c.name}")
          end
          if c.name == 'argentina'
            File.delete("#{path[0..-4]}/public/cache/index.html") if File.file?("#{path[0..-4]}/public/cache/index.html")
          else
            File.delete("#{path[0..-4]}/public/cache/#{c.name}.html") if  File.file?("#{path[0..-4]}/public/cache/#{c.name}.html")
          end
        end
      else
        # no specific linux category to list. try global search
      end
    end
  end
end

Parse.new(path)
